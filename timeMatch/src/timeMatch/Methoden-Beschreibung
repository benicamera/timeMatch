.Methodenbeschreibungen:

Hier ist die Syntax wie folgt:

Von wem wird gebraucht?: Was wird gebraucht?
Bsp.: 
GUI: public boolean showedItem(String nameOfItem) //Wird in unserem Programm nicht gebraucht.
Ggf. noch Zwischenschritte wie folgt beschreiben: //nameOfItem speichern.

Bitte programmiert sp, dass man am schluss auswählen kann welchen intervall man betrachten will.
Später soll es so sein, dass ich bernhard jahr monat und tag gebe. bitte schaltjahre beachten xd . tage erst laden, wenn sie belegte intervalle beinhalten
---TO-CODE:---

Calendar: public String insertDate(Boolean[size: 12]) //Setze den Array als Neuen "Kann oder kann nicht". Leer ist true.
          return-Optionen: "Erfolgreich", "Fehler"
Calendar: public boolean isFree(int time)
Calendar: public void setFree(int time, boolean free) //belege oder mach frei. true = frei false = belegt.
Calendar: public int getNumberOfIntervalls() //gibt einfach die Anzahl der Intervalle zurück -> besser erweiterung und Debug möglichkeiten.

Controller: public String createCalender(String name) //Speichere den namen als Key und den Kalender als Value in einer HashMap(https://www.youtube.com/watch?v=70qy6_gw1Hc)
			return-Optionen: "Erfolgreich", "Fehler", "Name bereits vergeben"
Controller: public Calender getCalender(String name) 
Controller: public ArrayList<Integer[size: 2]> getMatchingIntervalls() //Bitte die Syntax von der Liste Checken. Integer[0] ist start des Intervalls und Integer[1] das Ende.
Controller: public boolean isNameTaken(String name) //im grunde das gleiche wie createCalendar, nur dass du keinen erstellst.
(Done) Controller: public boolean isSchaltjahr(int year) //tu dich mit bernhard zusammen, vielleicht kann er das machen und du gibst nur weiter.
Controller: public String deleteCalendar(String name) //löscht Kalender und gibt "erfolgreich" oder nicht zurück.
Controller: public  ArrayList<String> getCalendarNameList() //gibt alle Kalendernamen in einer Liste zurück








---------------

Alle Public-Methoden werden hier auch beschrieben, wie folgt:

Wer hat geschrieben?: Was macht es, ggf. wichtige Zwischenschritte
Bsp.:
GUI: public void showFrame(int i) //zeigt den i. Frame an und int var++;

---PUBLIC-METHODS---








---------------------